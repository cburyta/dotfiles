# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/Repos

# reference to themes for the terminal
# https://gogh-co.github.io/Gogh/
# bash -c  "$(curl -sLo- https://git.io/vQgMr)"

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# lang files to help with various things
# export LANG=en_US.UTF-8
# export LC_CTYPE=en_US.UTF-8
export LANG=en_US.UTF-8
# export LC_CTYPE=en_US.UTF-8
# export LC_COLLATE=C
# export LC_NUMERIC=C

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# export CLICOLOR=true
# export BASE16_SHELL="$HOME/.iterm2/base16-shell"
# export TERM='xterm-256color'
export TERM='screen-256color'
#. $BASE16_SHELL/scripts/base16-bespin.sh
# [ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"
# [ -n "$PS1" ] && [ -s $BASE16_SHELL/scripts/base16-bespin.sh ] && . $BASE16_SHELL/scripts/base16-bespin.sh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

export PATH="/usr/local/opt/mysql-client/bin:$PATH"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# fast node manager, looks for .node-version and .nvmrc files
eval "$(fnm env --use-on-cd)"

export GROOVY_HOME=/usr/local/opt/groovy/libexec
export PATH="$PATH:$GROOVY_HOME/bin"

# added by Snowflake SnowSQL installer v1.2
export PATH=/Applications/SnowSQL.app/Contents/MacOS:$PATH

# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/chris/.lmstudio/bin"
# End of LM Studio CLI section


fpath+=~/.zfunc; autoload -Uz compinit; compinit

zstyle ':completion:*' menu select
